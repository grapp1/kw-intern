# timing.yaml
# Definitions of timing components of ParFlow
# Includes Cycles, Timing

# -----------------------------------------------------------------------------
# Timing Info
# -----------------------------------------------------------------------------

TimingInfo:
  __doc__: >
    Setting timing parameters

  BaseUnit:
    help: >
      [Type: double] This key is used to indicate the base unit of time for entering time values. All time should be expressed as a
      multiple of this value. This should be set to the smallest interval of time to be used in the problem. For example, a
      base unit of “1” means that all times will be integer valued. A base unit of “0.5” would allow integers and fractions
      of 0.5 to be used for time input values.
      The rationale behind this restriction is to allow time to be discretized on some interval to enable integer arithmetic
      to be used when computing/comparing times. This avoids the problems associated with real value comparisons which
      can lead to events occurring at different timesteps on different architectures or compilers.
      This value is also used when describing “time cycling data” in, currently, the well and boundary condition sections.
      The lengths of the cycles in those sections will be integer multiples of this value, therefore it needs to be the smallest
      divisor which produces an integral result for every “real time” cycle interval length needed.
    domains:
      DoubleValue:
        minValue: 0.0

  StartCount:
    help: >
      [Type: int] This key is used to indicate the time step number that will be associated with the first advection cycle in a
      transient problem. The value -1 indicates that advection is not to be done. The value 0 indicates that advection
      should begin with the given initial conditions. Values greater than 0 are intended to mean “restart” from some
      previous “checkpoint” time-step, but this has not yet been implemented.
    domains:
      IntValue:
        minValue: -1
        maxValue: 0

  StartTime:

  StopTime:

  DumpInterval:

  DumpIntervalExecutionTimeLimit:



TimeStep:
  __doc__: >
    Setting parameters for modeled time steps

  Type:

  Value:

  InitialStep:

  GrowthFactor:

  MaxStep:

  MinStep:


# -----------------------------------------------------------------------------
# Cycles
# -----------------------------------------------------------------------------

CycleNames:
  help: >
    [Type: string] This key is used to specify the named time cycles to be used in a simulation. It is a list of names and each name
    defines a time cycle and the number of items determines the total number of time cycles specified. Each named cycle
    is described using a number of keys defined under Cycle.
  domains:
    AnyString:

Cycle:
  __doc__: >
    Setting properties for cycles and intervals within those cycles.

  Names:
    help: >
      [Type: string] This key is used to specify the named time intervals for each cycle. It is a list of names and each name defines a
      time interval when a specific boundary condition is applied and the number of items determines the total number of
      intervals in that time cycle.
    domains:
      AnyString:

  Repeat:
    help: >
      [Type: int] This key is used to specify the how many times a named time interval repeats. A positive value specifies a
      number of repeat cycles a value of -1 specifies that the cycle repeat for the entire simulation.
    domains:
      MandatoryValue:
      IntValue:
        minValue: -1