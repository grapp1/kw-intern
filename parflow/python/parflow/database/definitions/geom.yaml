# geom.yaml
# Definitions of geometry-related keys in Parflow
# includes GeomInput, Geom
# typo: manual typos
# missing: keys that are missing from manual
# Corner cases

# GeomInput.%s.FileName
# GeomInput.%s.GeomName
# GeomInput.%s.GeomNames
# GeomInput.%s.InputType
# GeomInput.%s.Value
# Geom.%s.%s.Retardation.Rate
# Geom.%s.%s.Retardation.Type
# Geom.%s.CapPressure.%s.Value
# Geom.%s.FBx.FileName
# Geom.%s.FBy.FileName
# Geom.%s.FBz.FileName
# Geom.%s.FileName
# Geom.%s.HeatCapacity.Value
# Geom.%s.ICPressure.FileName
# Geom.%s.ICPressure.RefElevation
# Geom.%s.ICPressure.RefGeom
# Geom.%s.ICPressure.RefPatch
# Geom.%s.ICPressure.Value
# Geom.%s.ICSaturation.%s.Value
# Geom.%s.Lower.X
# Geom.%s.Lower.Y
# Geom.%s.Lower.Z
# Geom.%s.Patches
# Geom.%s.Perm.DelK
# Geom.%s.Perm.FileName
# Geom.%s.Perm.GeomMean
# Geom.%s.Perm.HighCutoff
# Geom.%s.Perm.KMax
# Geom.%s.Perm.LambdaX
# Geom.%s.Perm.LambdaY
# Geom.%s.Perm.LambdaZ
# Geom.%s.Perm.LogNormal
# Geom.%s.Perm.LowCutoff
# Geom.%s.Perm.MaxCpts
# Geom.%s.Perm.MaxNPts
# Geom.%s.Perm.MaxSearchRad
# Geom.%s.Perm.NumLines
# Geom.%s.Perm.RZeta
# Geom.%s.Perm.Seed
# Geom.%s.Perm.Sigma
# Geom.%s.Perm.StratType
# Geom.%s.Perm.TensorFileX
# Geom.%s.Perm.TensorFileY
# Geom.%s.Perm.TensorFileZ
# Geom.%s.Perm.TensorValX
# Geom.%s.Perm.TensorValY
# Geom.%s.Perm.TensorValZ
# Geom.%s.Perm.Type
# Geom.%s.Perm.Value
# Geom.%s.Porosity.FileName
# Geom.%s.Porosity.Type
# Geom.%s.Porosity.Value
# Geom.%s.RelPerm.A
# Geom.%s.RelPerm.Alpha
# Geom.%s.RelPerm.Alpha.Filename
# Geom.%s.RelPerm.Coeff.%d
# Geom.%s.RelPerm.Degree
# Geom.%s.RelPerm.InterpolationMethod
# Geom.%s.RelPerm.MinPressureHead
# Geom.%s.RelPerm.N
# Geom.%s.RelPerm.N.Filename
# Geom.%s.RelPerm.NumSamplePoints
# Geom.%s.RelPerm.Value
# Geom.%s.RelPerm.gamma
# Geom.%s.Saturation.A
# Geom.%s.Saturation.Alpha
# Geom.%s.Saturation.Alpha.Filename
# Geom.%s.Saturation.Coeff.%d
# Geom.%s.Saturation.Degree
# Geom.%s.Saturation.FileName
# Geom.%s.Saturation.N
# Geom.%s.Saturation.N.Filename
# Geom.%s.Saturation.SRes
# Geom.%s.Saturation.SRes.Filename
# Geom.%s.Saturation.SSat
# Geom.%s.Saturation.SSat.Filename
# Geom.%s.Saturation.Value
# Geom.%s.Saturation.gamma
# Geom.%s.SpecificStorage.Value
# Geom.%s.ThermalConductivity.KDry
# Geom.%s.ThermalConductivity.KDry.Filename
# Geom.%s.ThermalConductivity.KWet
# Geom.%s.ThermalConductivity.KWet.Filename
# Geom.%s.ThermalConductivity.Value
# Geom.%s.Upper.X
# Geom.%s.Upper.Y
# Geom.%s.Upper.Z
# Geom.%s.dzScale.FileName
# Geom.%s.dzScale.Value


# -----------------------------------------------------------------------------
# GeomInput.*
# -----------------------------------------------------------------------------

GeomInput:
  __doc__: >
    Here we define all “geometrical” information needed by ParFlow. For example,
    the domain (and patches on the domain where boundary conditions are to be
    imposed), lithology or hydrostratigraphic units, faults, initial plume
    shapes, and so on, are considered geometries.

  Names:
    help: >
      [Type: string] List of names to use for defining geometry regions
    domain:
      type: AnyStringDomain
    valueHandler:
      type: ChildrenHandler
      className: GeomInputItem
# user-defined entries in GeomInput.Names are passed to GeomInputItem

GeomInputItem:
  __doc__: >
    [Type: string] One of the user-defined names for defining a geometry region

  InputType:
    help: >
      [Type: string] This defines the type for the geometry input with the
      given input name. This key must be one of: SolidFile, IndicatorField,
      or Box.
    domain:
      type: EnumDomain
      enumList: ['SolidFile', 'IndicatorField', 'Box']

  GeomNames:
    help: >
      [Type: string] This is a list of the names of the geometries defined by
      the geometry input. For a geometry input type of Box, the list should
      contain a single geometry name. For the SolidFile geometry type this
      should contain a list with the same number of gemetries as were defined
      using GMS. The order of geometries in the SolidFile should match the
      names. For IndicatorField types you need to specify the value in the
      input field which matches the name using GeomInput.geom_input_name.Value.
    domain:
      type: AnyStringDomain
    valueHandler:
      type: ChildrenHandler
      className: GeomItem

#FileName is for solid files and indicator fields only
  FileName: # typo: this is capitalized incorrectly in the manual
    help: >
      [Type: string] For IndicatorField and SolidFile geometry inputs, this
      key specifies the input filename which contains the field or solid
      information.
    domain:
      type: AnyStringDomain

# Value is for indicator field only
  Value:
    help: >
      [Type: int] For IndicatorField geometry inputs, you need to specify
      the mapping between values in the input file and the geometry names.
      The named geometry will be defined wherever the input file is equal
      to the specified value.
    domain:
      type: IntRangeDomain

# -----------------------------------------------------------------------------
# Perm.*
# -----------------------------------------------------------------------------
# Only key for this is defining Perm.TensorType
Perm:
  __doc__: >
    run.Perm input options are: TensorType

  TensorType:
    help: >
      [Type: string] This key specifies whether the permeability tensor entries kx; ky and kz will be specified as
      three constants within a set of regions covering the domain or whether the entries will be specified cell-wise by
      files. The choices for this key are TensorByGeom and TensorByFile.
    domain:
      type: EnumDomain
      enumList: ['TensorByGeom', 'TensorByFile']

# -----------------------------------------------------------------------------
# SpecificStorage.*
# -----------------------------------------------------------------------------
# Only key for this is defining SpecificStorage.GeomNames and SpecificStorage.Type
SpecificStorage:
  __doc__: >
    run.Perm input options are: GeomNames, Type

  GeomNames:
    help: >
      [Type: string] This key specifies all of the geometries on which a different specific storage value will be
      assigned. These geometries must cover the entire computational domain.
    domain:
      type: AnyStringDomain

  Type:
    help: >
      [Type: string] This key specifies which method is to be used to assign specific storage data. The only choice
      currently available is Constant which indicates that a constant is to be assigned to all grid cells within a
      geometry.
    domain:
      type: EnumDomain
      enumList: ['Constant']

# -----------------------------------------------------------------------------
# dzScale.*
# -----------------------------------------------------------------------------
# note that this does not include the Solver.Nonlinear.VariableDz key, which is
# in the solvers.yaml file.

dzScale:
  __doc__: >
    This is where dZ multipliers are assigned within geounits using one of
    several methods.

  GeomNames:
    help: >
      [Type: string] This key specifies which problem domain is being applied a variable dz subsurface. These
      geometries must cover the entire computational domain.
    domain:
      type: AnyStringDomain

  Type:
    help: >
      [Type: string] This key specifies which method is to be used to assign variable vertical grid spacing. The choices currently
      available are Constant which indicates that a constant is to be assigned to all grid cells within a geometry, nzList
      which assigns all layers of a given model to a list value, and PFBFile which reads in values from a distributed pfb
      file.
    domain:
      type: AnyStringDomain

  nzListNumber:
    help: >
      [Type: int] This key indicates the number of layers with variable dz in the subsurface. This value is the same as
      the ComputationalGrid.NZ key.
    # Need to enforce a check to make sure that this is equal to ComputationalGrid.NZ
    domain:
      type: IntRangeDomain
      minValue: 1

CellnzItem:
  __doc__: >
    Setting the Cell.nzListNumber.dzScale.Value

  dzScale:
    __doc__: >
      Setting the Cell.nzListNumber.dzScale.Value

    Value:
      help: >
        [Type: double] This key assigns the thickness of each layer defined by nzListNumber. ParFlow assigns the layers from the bottom-up
        (i.e. the bottom of the domain is layer 0, the top is layer NZ-1). The total domain depth (Geom.domain.Upper.Z)
        does not change with variable dz. The layer thickness is calculated by ComputationalGrid.DZ *dZScale.
      domain:
        type: DoubleRangeDomain
        minValue: 0.0




# -----------------------------------------------------------------------------
# Geom.*
# -----------------------------------------------------------------------------
# Only assignments to "Geom." key are Perm, Porosity, Retardation, and user-defined geometric
# input names

Geom:
  __doc__: >
    This maps the various properties to the user-defined geometric inputs.

  Perm:
    __doc__: >
      run.Geom.Perm input options are: Names, TensorByGeom.Names

    Names:
      help: >
        [Type: string] This key specifies all of the geometries to which a
        permeability field will be assigned. These geometries must cover the
        entire computational domain.
      domain:
        type: AnyStringDomain

    TensorByGeom:
      __doc__: >
        run.Geom.Perm.TensorByGeom input options are: Names

      Names:
        help: >
          This key specifies all of the geometries to which permeability tensor
          entries will be assigned. These geometries must cover the entire
          computational domain.
        domain:
          type: AnyStringDomain


  Porosity:
    __doc__: >
      run.Geom.Porosity input options are: GeomNames

    GeomNames:
      help: >
        [Type: string] This key specifies all of the geometries to which a
        porosity will be assigned. These geometries must cover the
        entire computational domain.
      domain:
        type: AnyStringDomain

  Retardation:
    __doc__: >
      run.Geom.Retardation input options are: GeomNames

    GeomNames:
      help: >
        [Type: string] This key specifies all of the geometries to which the
        contaminants will have a retardation function applied.
      domain:
        type: AnyStringDomain





GeomItem:
  __doc__: >
    User-defined geometric instance. GeomItem names are taken from either
    GeomInput.Names or GeomItem.GeomNames.

# Lower/Upper for Box geometry only
  Lower:
    __doc__: >
      This section sets the lower coordinate locations for the
      box geometry.

    X:
      help: >
        [Type: double] This gives the lower X real space coordinate value of
        the previously specified box geometry of name box_geom_name.
      domain:
        type: DoubleRangeDomain

    Y:
      help: >
        [Type: double] This gives the lower Y real space coordinate value of
        the previously specified box geometry of name box_geom_name.
      domain:
        type: DoubleRangeDomain

    Z:
      help: >
        [Type: double] This gives the lower Z real space coordinate value of
        the previously specified box geometry of name box_geom_name.
      domain:
        type: DoubleRangeDomain

  Upper:
    __doc__: >
      This section sets the lower coordinate locations for the
      box geometry.

    X:
      help: >
        [Type: double] This gives the upper X real space coordinate value of
        the previously specified box geometry of name box_geom_name.
      domain:
        type: DoubleRangeDomain

    Y:
      help: >
        [Type: double] This gives the upper Y real space coordinate value of
        the previously specified box geometry of name box_geom_name.
      domain:
        type: DoubleRangeDomain

    Z:
      help: >
        [Type: double] This gives the upper Z real space coordinate value of
        the previously specified box geometry of name box_geom_name.
      domain:
        type: DoubleRangeDomain

  # Patches
  Patches:
    help: >
      [Type: string] Patches are defined on the surfaces of geometries. Currently you can only define patches on Box
      geometries and on the the first geometry in a SolidFile. For a Box the order is fixed (left right front back
      bottom top) but you can name the sides anything you want.
    domain:
      type: AnyStringDomain

  # Permeability
  Perm:
    __doc__: >
      Permeability values

    Type:
      # typo: ParGauss
      help: >
        [Type: string] This key specifies which method is to be used to assign permeability data to the named geometry,
        geometry_name. It must be either Constant, TurnBands, ParGauss, or PFBFile.
      domain:
        type: EnumDomain
        enumList: ['Constant', 'TurnBands', 'ParGauss', 'PFBFile']

    Value:
      help: >
        [Type: double] This key specifies the value assigned to all points in
        the named geometry, geometry_name, if the type was set to constant.
      domain:
        type: DoubleRangeDomain

    LambdaX:
      help: >
        [Type: double] This key specifies the x correlation length of the field
        generated for the named geometry, geometry_name, if either the Turning
        Bands or Parallel Gaussian Simulator are chosen.
      domain:
        type: DoubleRangeDomain

    LambdaY:
      help: >
        [Type: double] This key specifies the y correlation length of the field
        generated for the named geometry, geometry_name, if either the Turning
        Bands or Parallel Gaussian Simulator are chosen.
      domain:
        type: DoubleRangeDomain

    LambdaZ:
      help: >
        [Type: double] This key specifies the z correlation length of the field
        generated for the named geometry, geometry_name, if either the Turning
        Bands or Parallel Gaussian Simulator are chosen.
      domain:
        type: DoubleRangeDomain

    GeomMean:
      help: >
        [Type: double] This key specifies the geometric mean of the log normal
        field generated for the named geometry, geometry_name, if either the
        Turning Bands or Parallel Gaussian Simulator are chosen.
      domain:
        type: DoubleRangeDomain
        minValue: 0.0

    Sigma:
      help: >
        [Type: double] This key specifies the standard deviation of the normal
        field generated for the named geometry, geometry_name, if either the
        Turning Bands or Parallel Gaussian Simulator are chosen.
      domain:
        type: DoubleRangeDomain
        minValue: 0.0

    Seed:
      help: >
        [Type: int] This key specifies the initial seed for the random number
        generator used to generate the field for the named geometry,
        geometry_name, if either the Turning Bands or Parallel Gaussian
        Simulator are chosen. This number must be positive.
      default: 1
      domain:
        type: IntRangeDomain
        minValue: 1

    NumLines:
      help: >
        [Type: int] This key specifies the number of lines to be used in the Turning Bands algorithm for the named
        geometry, geometry_name.
      default: 100
      domain:
        type: IntRangeDomain
        minValue: 1

    RZeta:
      help: >
        [Type: double] This key specifies the resolution of the line processes, in terms of the minimum grid spacing,
        to be used in the Turning Bands algorithm for the named geometry, geometry_name. Large values imply high
        resolution.
      default: 5.0
      domain:
        type: DoubleRangeDomain
        minValue: 0.0

    KMax:
      help: >
        [Type: double] This key specifies the the maximum normalized frequency, Kmax, to be used in the Turning Bands
        algorithm for the named geometry, geometry_name.
      default: 100.0
      domain:
        type: DoubleRangeDomain
        minValue: 0.0

    DelK:
      help: >
        [Type: double] This key specifies the normalized frequency increment to be used in the Turning Bands
        algorithm for the named geometry, geometry_name.
      default: 0.2
      domain:
        type: DoubleRangeDomain
        minValue: 0.0

    MaxNPts:
      help: >
        [Type: int] This key sets limits on the number of simulated points in the search neighborhood to be used in the
        Parallel Gaussian Simulator for the named geometry, geometry_name.
      domain:
        type: IntRangeDomain
        minValue: 1

    MaxCpts:
      help: >
        [Type: int] This key sets limits on the number of external conditioning points in the search neighborhood to be
        used in the Parallel Gaussian Simulator for the named geometry, geometry_name.
      domain:
        type: IntRangeDomain
        minValue: 1

    LogNormal:
      help: >
        [Type: string] The key specifies when a normal, log normal, truncated normal or truncated log normal field is
        to be generated by the method for the named geometry, geometry_name. This value must be one of Normal, Log,
        NormalTruncated or LogTruncated and can be used with either Turning Bands or the Parallel Gaussian Simulator.
      default: 'LogTruncated'
      domain:
        type: EnumDomain
        # typo: LogTruncated is misspelled in the manual
        enumList: ['Normal', 'Log', 'NormalTruncated', 'LogTruncated']

    StratType:
      help: >
        [Type: string] This key specifies the stratification of the permeability field generated by the method for the
        named geometry, geometry_name. The value must be one of Horizontal, Bottom or Top and can be used with either
        the Turning Bands or the Parallel Gaussian Simulator.
      default: 'Bottom'
      domain:
        type: EnumDomain
        enumList: ['Horizontal', 'Bottom', 'Top']

    LowCutoff:
      help: >
        [Type: double] This key specifies the low cutoff value for truncating the generated field for the named
        geometry, geometry_name, when either the NormalTruncated or LogTruncated values are chosen.
      domain:
        type: DoubleRangeDomain
        minValue: 0.0

    HighCutoff:
      help: >
        [Type: double] This key specifies the high cutoff value for truncating the generated field for the named
        geometry, geometry_name, when either the NormalTruncated or LogTruncated values are chosen.
      domain:
        type: DoubleRangeDomain
        minValue: 0.0

    # MaxSearchRad is missing from the manual. Need to come back to this.
    MaxSearchRad:
      help: >
        [Type: int] A key to improve correlation structure of RF in testing.
      domain:
        type: IntRangeDomain
        minValue: 1

    FileName:
      help: >
        [Type: string] This key specifies that permeability values for the specified geometry, geometry_name, are given
        according to a user-supplied description in the “ParFlow Binary” file whose filename is given as the value. For
        a description of the ParFlow Binary file format, see the manual. The ParFlow Binary file associated with the
        named geometry must contain a collection of permeability values corresponding in a one-to-one manner to the
        entire computational grid. That is to say, when the contents of the file are read into the simulator, a
        complete permeability description for the entire domain is supplied. Only those values associated with
        computational cells residing within the geometry (as it is represented on the computational grid) will be
        copied into data structures used during the course of a simulation. Thus, the values associated with cells
        outside of the geounit are irrelevant. For clarity, consider a couple of different scenarios. For example, the
        user may create a file for each geometry such that appropriate permeability values are given for the geometry
        and “garbage" values (e.g., some flag value) are given for the rest of the computational domain. In this case,
        a separate binary file is specified for each geometry. Alternatively, one may place all values representing the
        permeability field on the union of the geometries into a single binary file. Note that the permeability values
        must be represented in precisely the same configuration as the computational grid. Then, the same file could be
        specified for each geounit in the input file. Or, the computational domain could be described as a single
        geouint (in the ParFlow input file) in which case the permeability values would be read in only once.
      domain:
        type: AnyStringDomain

    TensorValX:
      help: >
        [Type: double] This key specifies the value of kx for the geometry given by geometry_name.
      domain:
        type: DoubleRangeDomain
        minValue: 0.0

    TensorValY:
      help: >
        [Type: double] This key specifies the value of ky for the geometry given by geometry_name.
      domain:
        type: DoubleRangeDomain
        minValue: 0.0

    TensorValZ:
      help: >
        [Type: double] This key specifies the value of kz for the geometry given by geometry_name.
      domain:
        type: DoubleRangeDomain
        minValue: 0.0

    TensorFileX:
      help: >
        [Type: string] This key specifies that kx values for the specified geometry, geometry_name, are given according
        to a user-supplied description in the “ParFlow Binary” file whose filename is given as the value. The only
        choice for the value of geometry_name is “domain”.
      # need to impose this condition
      domain:
        type: AnyStringDomain

    TensorFileY:
      help: >
        [Type: string] This key specifies that ky values for the specified geometry, geometry_name, are given according
        to a user-supplied description in the “ParFlow Binary” file whose filename is given as the value. The only
        choice for the value of geometry_name is “domain”.
      # need to impose this condition
      domain:
        type: AnyStringDomain

    TensorFileZ:
      help: >
        [Type: string] This key specifies that kz values for the specified geometry, geometry_name, are given according
        to a user-supplied description in the “ParFlow Binary” file whose filename is given as the value. The only
        choice for the value of geometry_name is “domain”.
      # need to impose this condition
      domain:
        type: AnyStringDomain

  # Porosity
  Porosity:
    __doc__: >
      Setting porosity values to elements of domain

    Type:
      help: >
        [Type: string] This key specifies which method is to be used to assign porosity data to the named geometry,
        geometry_name. The only choice currently available is Constant which indicates that a constant is to be
        assigned to all grid cells within a geometry.
      domain:
        type: EnumDomain
        enumList: ['Constant']

    Value:
      help: >
        [Type: double] This key specifies the value assigned to all points in
        the named geometry, geometry_name, if the type was set to constant.
      domain:
        type: DoubleRangeDomain

    # FileName is missing from manual
    FileName:
      help: >
        [Type: string] This key specifies that porosity values for the specified geometry, geometry_name, are given
        according to a user-supplied description in the “ParFlow Binary” file whose filename is given as the value. The
        only choice for the value of geometry_name is “domain”.
      domain:
        type: AnyStringDomain

  # Specific Storage
  SpecificStorage:
    __doc__: >
      Setting specific storage values to elements of domain

    Value:
      help: >
        [Type: double] This key specifies the value assigned to all points in
        the named geometry, geometry_name, if the type was set to constant.
      domain:
        type: DoubleRangeDomain

  # Relative Permeability
  RelPerm:
    __doc__: >
      Setting relative permeability value to geometries

    Value:
      help: >
        [Type: double] This key specifies the constant relative permeability value on the specified geometry.
      domain:
        type: DoubleRangeDomain
        minValue: 0.0

    # Corner case with Alpha as class and field
    AlphaFileName:
      help: >
        [Type: string] This key specifies a pfb filename containing the alpha parameters for the VanGenuchten function cell-by-cell.
        The ONLY option for geom_name is "domain."
      domain:
        type: AnyStringDomain
      exportName: Alpha.Filename

    Alpha:
      help: >
        [Type: double] This key specifies the alpha parameter for the Van Genuchten function specified on geom_name.
      domain:
        type: DoubleRangeDomain
        minValue: 0.0

    # Corner case with N as class and field
    NFileName:
      help: >
        [Type: string] This key specifies a pfb filename containing the N parameters for the VanGenuchten function cell-by-cell.
        The ONLY option for geom_name is "domain."
      domain:
        type: AnyStringDomain
      exportName: N.Filename

    N:
      help: >
        [Type: double] This key specifies the alpha parameter for the Van Genuchten function specified on geom_name.
      domain:
        type: DoubleRangeDomain
        minValue: 0.0

    NumSamplePoints:
      help: >
        [Type: int] This key specifies the number of sample points for a spline base interpolation table for the Van Genuchten
        function specified on geom_name. If this number is 0 (the default) then the function is evaluated directly. Using the
        interpolation table is faster but is less accurate.
      default: 0
      domain:
        type: IntRangeDomain
        minValue: 0

    MinPressureHead:
      help: >
        [Type: int] This key specifies the lower value for a spline base interpolation table for the Van Genuchten function specified
        on geom_name. The upper value of the range is 0. This value is used only when the table lookup method is used
        (NumSamplePoints is greater than 0).
      domain:
        type: IntRangeDomain

    A:
      help: >
        [Type: double] This key specifies the A parameter for the Haverkamp relative permeability on geom_name.
      domain:
        type: DoubleRangeDomain

    Gamma:
      help: >
        [Type: double] This key specifies the gamma parameter for the Haverkamp relative permeability on geom_name.
      domain:
        type: DoubleRangeDomain

    Degree:
      help: >
        [Type: int] This key specifies the degree of the polynomial for the Polynomial relative permeability given on geom_name.
      domain:
        type: IntRangeDomain

    Coeff:
      __doc__: >
        Setting the coefficients for the polynomial relative permeability curve.

    CoeffNumber:
      help: >
        [Type: double] This key specifies the 'coeff_number'th coefficient of the Polynomial relative permeability given on geom_name.
      domain:
        type: DoubleRangeDomain

  # dz Scaling
  dzScale:
    __doc__: >
      Setting properties for the dz Scale.

    Value:
      help: >
        [Type: double] This key specifies the value assigned to all points in the named geometry, geometry_name, if the type was set
        to constant.
      domain:
        type: DoubleRangeDomain
        minValue: 0.0

    FileName:
      help: >
        [Type: string] This key specifies file to be read in for variable dz values for the given geometry, geometry_name, if the type
        was set to PFBFile.
      domain:
        type: AnyStringDomain

# Setting Geom.geometry_name.contaminant_name.Retardation.Type and Value
GeomContItem:
  __doc__: >
    Setting retardation properties for specific contaminants and specific geometries.

  Type:
    help: >
      [Type: string] This key specifies which function is to be used to compute the retardation for the named contaminant, contaminant_
      name, in the named geometry, geometry_name. The only choice currently available is Linear which indicates
      that a simple linear retardation function is to be used to compute the retardation.
    domain:
      type: EnumDomain
      enumList: ['Linear']

  Value:
    help: >
      [Type: double] This key specifies the distribution coefficient for the linear function used to compute the retardation of the
      named contaminant, contaminant_name, in the named geometry, geometry_name. The value should be scaled by
      the density of the material in the geometry.
    domain:
      type: DoubleRangeDomain
      minValue: 0.0